<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE taglib PUBLIC "-//Lucee//DTD CFML Tag Library 1.0//EN"
	"dtd/web-cfmtaglibrary_1_0.dtd">
<taglib>
	<tlib-version>1.0</tlib-version>
	<cfml-version>1.0</cfml-version>
	<short-name>tbase</short-name>
	<uri>https://www.lucee.org/cf-tld-3-1</uri>
	<display-name>Lucee Core Tag Library</display-name>
	<description></description>
	<name-space></name-space>
	<name-space-separator>:</name-space-separator>
	<ignore-unknow-tags>false</ignore-unknow-tags>
	<el>
		<el-class>lucee.transformer.cfml.expression.CFMLExprTransformer</el-class>
	</el>
	
	
	<!-- Application-->
	<tag>
		<name>application</name>
		<tag-class>lucee.runtime.tag.Application</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>
			Defines scoping for an application, enables or disables storing client variables,
			and specifies a client variable storage mechanism.
			By default, client variables are disabled. Also, enables session variables and sets timeouts
			for session and application variables. Session and application variables are stored in memory.
		</description>
		<attribute-type>mixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of your application. This name can be up to 64 characters long.
   		Required for application and session variables, optional for client variables</description>
		</attribute>
		<attribute>
			<type>object</type>
			<name>datasource</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>alias for default datasource</description>
		</attribute>
		<attribute>
			<type>array</type>
			<name>mails</name>
			<alias>mail</alias>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>mail servers.</description>
		</attribute>
		<attribute>
			<type>object</type>
			<name>defaultdatasource</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>the default datasource for this environment</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>datasources</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A structure that contains datasources definitions.</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>logs</name>
			<alias>log</alias>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A structure that contains log definitions.</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>caches</name>
			<alias>cache</alias>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A structure that contains cache definitions.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>action</name>
			<values>create,update</values>
			<default-value>create</default-value>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>action for the data set:
			- create (default): creates a new application context and overwrite the existing
			- update: update the existing application context when there is already one, otherwise a new one is created</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>loginStorage</name>
			<values>cookie,session</values>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
			storage for the login data:
			- cookie: store login information in the Cookie scope
			- session: store login information in the Session scope
			</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>clientManagement</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Enables client variables. Default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>clientStorage</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
Specifies how Lucee stores client variables:
- memory: the session is only kept in memory
- cookie: the session is stored in the client cookie
- file (default): the session is stored in a local file
- "datasource-name"|"cache-name": when you select a name of an available datasource or cache, the client scope will be stored in there</description>
		</attribute>

		<attribute>
			<type>string</type>
			<name>sessionType</name>
			<values>application,jee</values>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
<description>
Lucee provide 2 kind of sessions:
- application: session handled by Lucee
- jee: session handled by the Servlet Engine used
Default value is defined in the Lucee Web Administrator. "jee" can not use a session storage.
</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>sessionStorage</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
<description>
Specifies how Lucee stores session variables:
- memory (default): the session is only kept in memory
- cookie: the session is stored in the client cookie
- file: the session is stored in a local file
- "datasource-name"|"cache-name": when you select a name of an available datasource or cache, the session scope will be stored in there
</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>clientCluster</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>if set to true, lucee uses the storage backend for the client scope as master and Lucee checks for changes in the storage backend with every request,
			if set to false (default), the storage is only used as slave, lucee only initially gets the data from the storage. Ignored for storage type "memory".</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>sessionCluster</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>if set to true, lucee uses the storage backend for the session scope as master and Lucee checks for changes in the storage backend with every request,
			if set to false (default), the storage is only used as slave, lucee only initially gets the data from the storage. Ignored for storage type "memory".</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>setClientCookies</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes enables client cookies. Default is Yes. If you set this attribute to
		"No", Lucee does not automatically send the CFID and CFTOKEN cookies to the client browser;
		you must manually code CFID and CFTOKEN on the URL for every page that uses Session or Client variables.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>sessionManagement</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes enables session variables. Default is No.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>sessionTimeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter the CreateTimeSpan function and values in days, hours, minutes, and seconds, separated
		by commas, to specify the lifespan of session variables. The default value is specified in the
		Variables page of the Lucee Administrator.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>clientTimeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter the CreateTimeSpan function and values in days, hours, minutes, and seconds, separated
		by commas, to specify the lifespan of client variables. The default value is specified in the
		Variables page of the Lucee Administrator.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>applicationTimeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter the CreateTimeSpan function and values in days, hours, minutes, and seconds, separated
		by commas, to specify the lifespan of application variables. The default value is specified in
		the Variables page of the Lucee Administrator.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>requestTimeout</name>
			<alias>timeout</alias>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Sets the amount of time Lucee will wait for a request to finish before a request timeout will be raised. This means that the execution of the request will be stopped.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>setDomainCookies</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Sets the CFID and CFTOKEN cookies for a domain, not just a single host.
		Applications that are running on clusters must set this value to Yes. The default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>scriptProtect</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies whether to protect variables from cross-site scripting attacks</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>functionpaths</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Array or String list of paths where you have your functions.</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>proxy</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>general proxy that should be used for all connections with the following format:
			{server:"localhost", port:12345, username:"susi", password: "sorglos"}</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>mappings</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A structure that contains mappings. Each element in the structure consists of a key and a value.
			The logical path is the key and the absolute path is the value.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>customtagpaths</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Contains custom tag paths.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>componentpaths</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Contains component paths.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>secureJson</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether to add a security prefix in front of the value that a function returns in JSON-format
			in response to a remote call.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>wstype</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>webservice type used, this can be one of the following values
- Axis1 (default): The Apache Axis 1 implementation is used
- CXF: The CXF implementation is used</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>typeChecking</name>
			<required>false</required>
			<default-value>true</default-value>
			<rtexprvalue>true</rtexprvalue>
			<description>If disabled, Lucee ignores type definitions with function arguments and return values</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>compression</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enable compression (GZip) for the Lucee Response stream for text-based responses when supported by the client (Web Browser).</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>suppressRemoteComponentContent</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Suppress content written to response stream when a Component is invoked remotely. Only works if the content was not flushed before.</description>
		</attribute>
		
		
		<attribute>
			<type>string</type>
			<name>secureJsonPrefix</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The security prefix to put in front of the value that a function returns in JSON-format in response to a remote call if the secureJSON setting is true.</description>
		</attribute>

		<attribute>
			<type>struct</type>
			<name>tag</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>tags/attributes default value in the following structure:
#{location:{addtoken=false}}#</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>ormenabled</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies whether ORM should be enabled for the current application context.The default is false.</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>ormsettings</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
A struct that defines all the ORM settings, the following keys are supported:
- autogenmap(default:true): Specifies whether Lucee should automatically generate mapping for the persistent CFCs. If autogenmap=false, mapping should be provided in the form of "{cfc-name}.cfc.hbm.xml" files.
- automanageSession(default:true; not supported yet): Lets you specify if Lucee must manage Hibernate session automatically. If enabled: Lucee manages the session completely. That is, it decides when to flush the session, when to clear the session, and when to close the session. If disabled: The application is responsible for managing flushing, clearing, or closing of the session. The only exception is (in the case of transaction), when the transaction commits, the application flushes the session. Lucee closes the ORM session at the end of request irrespective of this flag being enabled or disabled.
- cacheconfig: Specifies the location of the configuration file that should be used by the secondary cache provider.This setting is used only when secondarycacheenabled=true.
- cacheprovider: Specifies the cache provider that should be used by ORM as secondary cache.
- catalog: Specifies the default Catalog that should be used by ORM.
- cfclocation: Specifies the directory (or array of directories) that should be used by Lucee to search for persistent CFCs to generate the mapping. If cfclocation is set, Lucee looks at only the paths specified in it. If it is not set, Lucee looks at the application directory, its sub-directories, and its mapped directories to search for persistent CFCs.
- datasource: Specifies the data source that should be used by ORM. If it is not specified here, then the data source specified for the application is picked up.
- dbcreate(default:none): Hibernate can automatically create the tables for your application in the database. dbCreate takes the following values:
-- update: Setting this value creates the table if it does not exist or update the table if it exists.
-- dropcreate: Setting this value drops the table if it exists and then creates it.
-- none: Setting this value does not change anything in the database schema.
- dialect: Specifies the dialect.Lucee supports the following dialects: [Cache 2007.1, Cache71, Cache 2007.1, DB2, DB2/390, DB2/400, DB2390, DB2400, DB2AS400, DB2OS390, DataDirectOracle9, Derby, Firebird, FrontBase, H2, H2DB, HSQL, HSQLDB, Informix, Ingres, Interbase, JDataStore, MSSQL, Mckoi, MckoiSQL, MicrosoftSQLServer, Mimer, MimerSQL, MySQL, MySQL/InnoDB, MySQL/MyISAM, MySQL5, MySQL5/InnoDB, MySQL5InnoDB, MySQLInnoDB, MySQLMyISAM, MySQLwithInnoDB, MySQLwithMyISAM, Oracle, Oracle10g, Oracle8i, Oracle9, Oracle9i, Pointbase, PostgreSQL, PostgresPlus, Progress, SAPDB, SQLServer, Sybase, Sybase11, SybaseASE15, SybaseAnywhere, com.ddtek.jdbc.db2.DB2Driver, com.microsoft.jdbc.sqlserver.SQLServerDriver, oracle.jdbc.driver.OracleDriver, org.firebirdsql.jdbc.FBDriver, org.gjt.mm.mysql.Driver, org.h2.Driver, org.hsqldb.jdbcDriver, org.postgresql.Driver]
- eventHandling(default:false): Specifies whether ORM Event callbacks should be given.
- flushatrequestend(default:true): Specifies whether ormflush should be called automatically at request end. If flushatrequestend is false, ormflush is not called automatically at request end.
- logSQL(default:false): Specifies whether the SQL queries that are executed by ORM will be logged. If LogSQL=true, the SQL queries are logged to the console.
- ormconfig: The Hibernate configuration file. This file contains various configuration parameters like, dialect, cache settings, and mapping files that are required for the application. For more details, see www.hibernate.org/hib_docs/reference/en/html/session-configuration.html. The settings defined in the ormsettings override the settings defined in the Hibernate Configuration XML file.The connection information in the Hibernate Configuration XML file is however ignored because Lucee uses its own connection pool. You will need to use this only when you need to use a hibernate setting that is not available using ormsetting.
- savemapping(default:false): Specifies whether the generated Hibernate mapping file has to be saved to disc. If you set the value to true, the Hibernate mapping XML file is saved with the filename "CFC name".hbm.xml in the same directory as the CFC. If any value of savemapping is specified in CFC, it will override the value specified in the ormsetting.
- schema: Specifies the default Schema that should be used by ORM.
- secondarycacheenabled(default:false): Specifies whether secondary caching should be enabled
- skipCFCWithError(default:false;not implemented yet): Lets you specify if Lucee must skip the CFCs that have errors. If set to true, Lucee ignores the CFCs that have errors.
- sqlscript: Path to the SQL script file that gets executed after ORM is initialized. This applies if dbcreate is set to dropcreate. This must be the absolute file path or the path relative to the application.The SQL script file lets you populate the tables before the application is accessed.
- useDBForMapping(default:true): Specifies whether the database has to be inspected to identify the missing information required to generate the Hibernate mapping. The database is inspected to get the column data type, primary key and foreign key information.
</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>s3</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
A struct that defines default S3 settings, this settings can be overwritten as part of the S3 file path, the following keys are supported:
- accessKeyId: S3 access key id
- awsSecretKey: AWS (Amazon Web Service) Secret Key
- defaultLocation(default:us): region for the bucket, possible values are [eu,us,us-west]
- host(default:"s3.amazonaws.com"): hostname of the service
</description>
		</attribute>
	
		<attribute>
			<type>struct</type>
			<name>ftp</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
A struct that defines default ftp settings, this settings can be overwritten as part of the ftp file path, the following keys are supported:
- username: username to access the ftp server
- password: password to access the ftp server
- port: port of the FTP server
- host: hostname of the FTP server (lucee.org)
</description>
		</attribute>
		
		<attribute>
			<type>boolean</type>
			<name>triggerDataMember</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>???If there is no accessible data member (property, element of the this scope) inside a component, 
			Lucee searches for available matching &amp;quot;getters&amp;quot; or &amp;quot;setters&amp;quot; for the requested property. 
			The following example should clarify this behaviour. 
			&amp;quot;somevar = myComponent.propertyName&amp;quot;. 
			If &amp;quot;myComponent&amp;quot; has no accessible data member named &amp;quot;propertyName&amp;quot;, 
			Lucee searches for a function member (method) named &amp;quot;getPropertyName&amp;quot;.</description>
		</attribute>
		
		<attribute>
			<type>boolean</type>
			<name>InvokeImplicitAccessor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>???alias for triggerDataMember</description>
		</attribute>
		
		<attribute>
			<type>string</type>
			<name>cacheObject</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for object caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheFunction</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for function caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheQuery</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for query caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheTemplate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for template caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheResource</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from ram resource in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheInclude</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from an include</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheHTTP</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from a http tag</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheFile</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from file operations</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheWebservice</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from webservice calls</description>
		</attribute>
		<attribute>
			<type>object</type>
			<name>onMissingTemplate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>closure/udf executed when the requested template does not exist</description>
		</attribute>
		<attribute>
			<type>locale</type>
			<name>locale</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Sets the country/language locale for CFML processing. The locale value
        determines the default format of date, time, number, and
        currency values, according to language and regional
        conventions.</description>
		</attribute>
		<attribute>
			<type>timezone</type>
			<name>timeZone</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>change the timezone definition for the current application context.</description>
		</attribute>
		<attribute>
			<type>String</type>
			<name>webcharset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>character set used for output streams, form-, url-, and cgi scope variables and reading/writing the header</description>
		</attribute>
		<attribute>
			<type>String</type>
			<name>resourcecharset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>character set used for reading from/writing to various resources</description>
		</attribute>
		<attribute>
			<type>String</type>
			<name>scopecascading</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
Depending on this setting Lucee scans certain scopes to find a variable called from the CFML source. This will only happen, when the variable is called without a scope. (Example: #myVar# instead of #variables.myVar#), the following values are supported:
- strict: scans only the variables scope
- small: scans the scopes variables,url,form
- standard: scans the scopes variables,cgi,url,form,cookie
			</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>searchImplicitScopes</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>alias to the attribute "scopecascading", takes a boolean value where true is equal to "standard" and false is equal to "struct" scope cascading mode.
			For details see the description for the attribute "scopecascading".</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>authcookie</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>cfauthorization cookie behaviour</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>sessioncookie</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>session cookie behaviour
				
			- secure	
			- httpOnly
			- samesite
			- expires
			- domain
			- path
			</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>cachedAfter</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>set the timespan for the attribute "cachedAfter" from tag "query".</description>
		</attribute>
		<attribute>
			<name>javaSettings</name>
			<type>struct</type>
			<required>false</required>
			<description>
	a struct to define dynamically java libraries
	the following keys are supported
	- loadPaths - an array or a comma separated string list of jars or class directories
	- reloadOnChange - reload updated jars without a restart necessary
	- watchInterval - interval it checks for changes with the jar files
	- watchExtensions - extension of the files read
			</description>
		</attribute>
		<attribute>
			<name>xmlFeatures</name>
			<type>struct</type>
			<required>false</required>
			<description>Allows to set XML Features to prevent XXE attacks

	- disallowDoctypeDecl (true / false) 
	- externalGeneralEntities (true/false)
	 - secure (true/false)</description>
		</attribute>
	</tag>	
	
	<!-- Argument -->
	<tag>
		<name>argument</name>
		<tag-class>lucee.runtime.tag.Argument</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Argument</tte-class>
		<att-default-value></att-default-value>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Allows subtag data to be saved with the base tag. Applies only to custom tags.</description>
		<attribute-type>mixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of the argument</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>the type of the argumentany (array, binary, boolean, date, guid, numeric, query, string, struct, uuid)</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>required</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<undefined-value>boolean:true</undefined-value>
			<description>is argument required or not</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>default</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>default value of the argument</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>displayname</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name to display (only used by components)</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>hint</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>hint to the argument (only used by components)</description>
		</attribute>
	</tag>
	
	
	<!-- Class -->
	<tag>
		<name>class</name>
		<tag-class>lucee.runtime.tag.Component</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Component</tte-class>
		<ttt-class>lucee.transformer.bytecode.statement.tag.TagComponent</ttt-class>
		<att-default-value></att-default-value>
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>false</rtexprvalue>
			<context>component</context>
		</script>
		<description>Creates and defines a component object; encloses functionality that you build in CFML and enclose within cffunction tags. This tag contains one or more cffunction tags that define methods. Code within the body of this tag, other than cffunction tags, is executed when the component is instantiated. </description>
		<att-class>lucee.transformer.cfml.attributes.impl.Component</att-class>
		<attribute-type>mixed</attribute-type>
		<attribute>
			<type>boolean</type>
			<name>synchronized</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>If set to true all calls to an instance of a component are synchronized. This setting allows a method to be executed only by one single thread at a time.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>persistent</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies CFC is persistent or not</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>extends</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of parent component from which to inherit methods and properties.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>displayname</name>
			<alias>display</alias>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A string to be displayed when using introspection to show
            information about the CFC. The information appears on the
            heading, following the component name.
            If the style attribute is set to document, the displayname
            attribute is used as the name of the service element in the WSDL.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>hint</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Text that displays when you use introspection to show information about the CFC. The hint attribute value appears below the component name heading. Use this attribute to describe the purpose of the component.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>output</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
				- true: permits component method output
				- false: suppresses component method output
			</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>style</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Specifies whether a CFC used for web services uses RPC-encoded style or document-literal style</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>namespace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Specifies the namespace used in the WSDL when
            using the CFC as a document-literal style web service.
            If you don't specify this attribute, Lucee
            derives the namespace from the CFC class name.
            This attribute applies only when style="document".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>serviceportname</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Specifies the name of the port element in the WSDL.
            This attribute applies only when style="document".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>serviceaddress</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Specifies the SOAP URL of the web service. If you don't specify this attribute, Lucee uses the URL of the CFC in the WSDL service description.
			Use this attribute to specify the protocol, for example, by specifying a URL that starts with https://. This attribute applies only for web services.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>porttypename</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Specifies the name of the porttype element in the WSDL.
            This attribute applies only when style="document".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>bindingname</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies the name of the binding element in the WSDL.
            This attribute applies only when style="document".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>wsdlfile</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>A properly formatted WSDL file to be used instead of
            WSDL generated by Lucee.
            This attribute applies only when style="document".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>alias</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description></description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>mappedSuperClass</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description></description>
		</attribute>
	</tag>
	
	<!-- Function -->
	<tag>
		<name>function</name>
		<tag-class>lucee.runtime.tag.Function</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Function</tte-class>
		<ttt-class>lucee.transformer.bytecode.statement.tag.TagFunction</ttt-class>
		<att-default-value></att-default-value>
		<!-- <tdbt-class>lucee.transformer.cfml.script.CFMLScriptTransformer</tdbt-class> -->
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Defines table column header, width, alignment, and text. Used only inside a cftable.</description>
		<att-class>lucee.transformer.cfml.attributes.impl.Function</att-class>
		<attribute-type>mixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A string; a component method that is used within the cfcomponent tag.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>returnType</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>String; a type name; data type of the function return value</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>roles</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>This attribute is used only for a component. If this attribute is omitted, all roles can invoke the method.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>access</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>This attribute is used only for a component.
The client security context from which the method can be invoked</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>output</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>This attribute is used only for a component.

yes: the function is processed as if it were within a cfoutput tag
no: the function is processed as if it were within a cfsilent tag </description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>displayname</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Display Name of the Function</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>hint</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Hint of the Function</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>abstract</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>is the function abstract or not, abstract functions are only allowed inside interface or component tags</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>description</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Supplies a short text description of the function.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>returnFormat</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The format in which to return values to a remote caller.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>description</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Supplies a short text description of the function.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>secureJson</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether to add a security prefix in front of any value that the function returns in JSON-format in response to a remote call.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>verifyClient</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether to require remote function calls to include an encrypted security token. For use with AJAX applications only.</description>
		</attribute>
		
		<attribute>
			<type>object</type>
			<name>cachedWithin</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>
possible values are:
String "request": If original content was created within the current request, cached content data isused.
a timespan (created with function CreateTimeSpan): If original content date falls within the time span, cached content data isused. 

To use cached data, the function must be called with the exact same arguments.</description>
    </attribute>
	</tag>
	
	<!-- Header -->
	<tag>
		<name>ResponseHeader</name>
		<tag-class>lucee.runtime.tag.Header</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>Generates custom HTTP response headers to return to the client.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A name for the header.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A value for the HTTP header. This attribute is used in conjunction with the name attribute.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>statusCode</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A number that sets the HTTP status code.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>charset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The character encoding in which to encode the header value.

            For more information on character encodings, see:
            www.w3.org/International/O-charset.html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>statusText</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Text that explains the status code. This attribute is used in conjunction with the
	statusCode attribute.</description>
		</attribute>
	</tag>
	<!-- Output -->
	<tag>
		<name>Output</name>
		<tag-class>lucee.runtime.tag.Output</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Output</tte-class>
		<ttt-class>lucee.transformer.bytecode.statement.tag.TagOutput</ttt-class>
		<allow-removing-literal>yes</allow-removing-literal>
		<body-content>must</body-content>
		<body-rtexprvalue>true</body-rtexprvalue>
		<description>inside the body of this tags, expressions surrounded by "#" are parsed.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>encodefor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>encode for what, valid values are:
- css: for output inside Cascading Style Sheets (CSS)
- dn: for output in LDAP Distinguished Names
- html: for output inside HTML
- html_attr: for output inside HTML Attributes
- javascript: for output inside Javascript
- ldap: for output in LDAP queries
- url: for output in URL
- vbscript: for output inside vbscript
- xml: for output inside XML
- xml_attr: for output inside XML Attributes
- xpath: for output in XPath</description>
		</attribute>
	</tag>
	
	<!-- ScriptX -->
	<tag>
		<name>Script</name>
		<tag-class>lucee.runtime.tag.Script</tag-class>
		<tdbt-class>lucee.transformer.cfml.script.CFMLScriptTransformer</tdbt-class>
		<ttt-class>lucee.transformer.bytecode.statement.tag.TagScript</ttt-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Script</tte-class>
		<body-content>tagdependent</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Encloses a code segment containing cfscript.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>language</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	
	<!-- Silent -->
	<tag>
		<name>Silent</name>
		<tag-class>lucee.runtime.tag.Silent</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Silent</tte-class>
		<!-- removed to have in "getBaseTagList" ttt-class>lucee.transformer.bytecode.statement.tag.TagSilent</ttt-class -->
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<handle-exception>true</handle-exception>
		<script>
			<type>single</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>Suppresses all output that is produced by the CFML within the tag's scope.</description>
		<attribute-type>fixed</attribute-type>

	</tag>
</taglib>
